#--------------LIBRER칈AS--------------#
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.graph_objects as go
import plotly.express as px
from plotly.subplots import make_subplots
import math
from sklearn.preprocessing import LabelEncoder
import streamlit as st
from PIL import Image
#--------------LIBRER칈AS--------------#

st.set_page_config(page_title='Observaciones', page_icon='游늶', layout='centered')
st.set_option('deprecation.showPyplotGlobalUse', False)

df = pd.read_csv("data/preprocesado.csv")

st.title('Observaciones')

st.subheader('Variables categ칩ricas')
cols = ['experience_level', 'employment_type', 'job_specialization', 'salary_currency', 'employee_residence', 'company_size', "company_location"]
fig = make_subplots(rows=3, cols=3, subplot_titles=cols)
for i, col in enumerate(cols):
    row = i // 3 + 1
    col = i % 3 + 1
    fig.add_trace(go.Histogram(x=df[cols[i]], nbinsx=20, name=f'Distribuci칩n de {cols[i]}'), row=row, col=col)
fig.update_yaxes(showticklabels=False, row=3, col=3) #Esto elimina aquellas que est치n vac칤as.
fig.update_layout(height=1200, width=1500, title_text="Distribuci칩n de Variables", template='plotly_dark', showlegend=False)
fig.update_xaxes(tickangle=90)
st.plotly_chart(fig)

st.markdown("""
Aqu칤 se est치 representando el conteo de las variables categ칩ricas que se han utilizado para clasificar la variables num칠ricas del dataset. En la primera podemos ver que el nivel de experiencia SE (experiencia senior) es el m치s predominante entre los usuarios. En la segunda, el tipo de contrato FT (a tiempo completo) es el m치s com칰n entre los empleados. En la tercera vemos los diferentes grupos creados para encasillar los trabajos listados dentro de la columna 'job_title'. Se comprueba que dentro del grupo 'Data' que englobar칤a todos aquellos trabajos especializados en el an치lisis y manejo de datos, es donde hay el mayor n칰mero de trabajos. En las tres siguientes, 'salary_currency', 'employee_residence' y 'company_location' vemos que los m치s predominante en las tres son los d칩lares (usd) y la residencia en Estados Unidos. Finalmente, en la gr치fica que muestra el tama침o de la empresa, llamada 'company_size', vemos que la m치s predominante entre los usuarios es la empresa de tama침o mediano (M).
""")

st.subheader('Variables num칠ricas')
cols = ['work_year', 'salary', 'salary_in_usd', 'remote_ratio']
fig = make_subplots(rows=1, cols=4)
for i, col in enumerate(cols):
    fig.add_trace(go.Histogram(x=df[col], nbinsx=20, name=f'Distribuci칩n de {cols[i]}'), row=1, col=i+1)
fig.update_layout(height=400, width=1200, title_text="Distribuci칩n de Variables", template='plotly_dark',showlegend=True)
st.plotly_chart(fig)
st.markdown("""
Aqu칤 se comprueba la distribuci칩n de las diferentes variables num칠ricas dentro del DataFrame. En la primera gr치fica, la distribuci칩n de 'work_year', se observa que la mayor칤a de datos se han recogido para el a침o 2023. En la segunda gr치fica, la distribuci칩n de 'salary', en sus diferentes divisas, vemos que la mayor칤a de datos est치n recogidos dentro de un rango, no obstante, hay presencia de valores at칤picos muy alejados del rango mayoritario. En la tercera, la distribuci칩n de salary_in_usd, vemos que al pasar el salario a d칩lares, 칠ste queda m치s repartido en diferentes rangos, ya que el tener diferentes divisas se creaba un rango muy amplio debido a la gran disparidad entre las monedas de cada pa칤s. A칰n as칤, tambi칠n se observan valores at칤picos, como se predijo en el an치lisis global de los datos. Finalmente, en la distribuci칩n de 'remote_ratio', se puede ver que los datos est치n distribuidos en tres grupos, aquellos que desempe침an su trabajo de manera presencial, los que lo desempe침an de ma침nera h칤brida (presencial + remoto) y los que lo desempe침an de manera completamente remota, siendo la m치s predominante la presencial y la que menos, la h칤brida.
""")

st.subheader('Identificaci칩n de Valores At칤picos')
def identificar_outliers(dataframe):
    """
    Esta funci칩n crea un gr치fico de caja (boxplot) para cada columna num칠rica 
    en un DataFrame para ayudar a identificar los outliers.
    """
    # Seleccionamos solo las columnas num칠ricas
    numeric_cols = dataframe.select_dtypes(include='number').columns
    # Calculamos el n칰mero de filas y columnas para los subplots
    ncols = 4
    nrows = math.ceil(len(numeric_cols) / ncols)
    # Creamos la figura y los subplots
    fig = make_subplots(rows=nrows, cols=ncols, subplot_titles=numeric_cols)
    for i, col in enumerate(numeric_cols):
        # Calculamos las coordenadas del subplot
        row = i // ncols + 1
        col_idx = i % ncols + 1
        # Comprobamos si la columna tiene m치s de un valor 칰nico para evitar errores
        if len(dataframe[col].unique()) > 1:
            fig.add_trace(go.Box(y=dataframe[col], name=col), row=row, col=col_idx)
        else:
            print(f"La columna {col} tiene un solo valor 칰nico y no se puede graficar")
    fig.update_layout(title="Gr치fico de caja de los outliers", height=600*nrows, showlegend=False, template='plotly_dark')
    st.plotly_chart(fig)

identificar_outliers(df)
st.markdown("""
En la primera gr치fica, se puede observar que se ha considerado como valor at칤pico los datos recogidos dentro del a침o 2020. Esto se debe a que la cantidad de datos recogidos para ese a침o es tan peque침a, que no se considera que tengan un peso suficientemente grande como para entrar dentro del rango de datos de inter칠s. En la segunda gr치fica se puede comprobar como los salarios quedan recogidos dentro de un rango muy peque침o en comparaci칩n con la distribuci칩n de valores at칤picos. Esto se debe a que la diferencia entre divisas hay imposible recoger todos los salarios dentro de un rango coherente, lo cual alza la necesidad del cambio de divisas a d칩lares, como se ha hecho dentro del dataset. En la gr치fica de 'salary_in_usd' se han conseguido unificar la mayor칤a de salarios dentro de un rango mayor, no obstante, siguen existiendo valores at칤picos muy lejos de ese rango, lo que quiere indicar que puede haber ciertos pa칤ses en los que para un mismo puesto de trabajo, paguen una cantidad considerablemente mayor en comparaci칩n con la mayor칤a de datos recogidos. Finalmente, para la gr치fica de 'remote_ratio' y como se pudo ver en el apartado anterior, todos los datos quedan recogidos dentro del rango establecido, que va del 0 a 100 por ciento.
""")

st.subheader('Salario Medio seg칰n el Nivel de Experiencia')
fig = px.strip(df, x="experience_level", y="salary_in_usd", template="plotly_dark", color='job_specialization')

fig.update_layout(
    title='Distribuci칩n de salarios por nivel de experiencia',
    xaxis=dict(title='Nivel de experiencia'),
    yaxis=dict(title='Salario en USD')
)
st.plotly_chart(fig)
st.markdown("""
De esta gr치fica podemos comprobar que hay una mayor concentraci칩n de trabajos dentro de la experiencia SE. Como es de esperar, los salarios dentro del nivel EN (junior) son m치s bajos que en el nivel MI (medio), que a su v칠z son lig칠ramente m치s bajos que en nivel SE (senior) y que, igualmente, son lig칠ramente m치s bajos que en el nivel EX (experto).
""")

fig = make_subplots(rows=2, cols=1)
salario_medio = df.groupby('experience_level')['salary_in_usd'].mean().reset_index()
fig.add_trace(go.Bar(x=salario_medio["experience_level"], y=salario_medio["salary_in_usd"]),row=1,col=1)
fig.add_trace(go.Box(x=df["experience_level"], y=df["salary_in_usd"]),row=2,col=1)
fig.update_layout(height=1200, width=1200, title_text="Salario Promedio por Nivel de Experiencia", template='plotly_dark', showlegend=True)
st.plotly_chart(fig)
st.markdown("""
En la gr치fica de arriba se puede observar que el nivel de experiencia EX (nivel experto) es el que tiene el salario medio m치s alto, como se pudo comprobar en la gr치fica anterior, seguido por el nivel SE (senior), luego por el nivel MI (medio) y finalmente por el nivel EN (junior). No obstante, aqu칤 no somos capaces de apreciar la influencia de los valores at칤picos dentro de la media. A pesar de los valores at칤picos, la media de los salarios est치 bastante cerca de la mediana, lo cu치l indicar칤a una distribuci칩n sim칠trica entre los salarios, y que 칠stos valores suponen un majen de error bastante peque침o dentro de los datos dados.
""")

st.subheader('Comparaci칩n del Salario por Experiencia y Tipo de Contrato')
by_employment = df.groupby(['job_specialization','experience_level','employment_type'])['salary_in_usd'].mean().reset_index()

fig = px.scatter_3d(by_employment,
                    x='employment_type', y='salary_in_usd', z='experience_level', color='job_specialization', template="plotly_dark")
fig.update_layout(
    title="Salario Medio en funci칩n del Tipo de Empleo y Experiencia",
    scene=dict(
        xaxis=dict(title="Tipo de Empleo"),
        yaxis=dict(title="Salario Medio en USD"),
        zaxis=dict(title="Nivel de Experiencia")
    )
)
st.plotly_chart(fig)
st.markdown("""
La finalidad de esta comparativa es descubrir si existen diferencias en el salario medio dentro de la misma experiencia cuando hay diferentes tipo de contrato. Se puede observar para todos los niveles de experiencia que el tipo de contrato FL (aut칩nomo), llega a ganar mucho menos que un empleado contratado FT (a tiempo completo), para el mismo nivel de experiencia, y, en ocasiones, incluso considerablemente menos que un PT (media jornada). Para el tipo de contrato CT (subcontrata), se comprueba que su salario es menor que el empleado FT a excepci칩n de un valor at칤pico, en el cu치l el salario medio es mucho mayor que el resto de salarios de la tabla para la especialidad de Data.
""")

st.subheader('Evoluci칩n del Salario Medio con el paso de los A침os')

tab1,tab2=st.tabs(['Evoluci칩n', 'Predicci칩n'])
with tab1:
    data=df.groupby('work_year')['salary_in_usd'].mean().reset_index()
    fig = px.line(data, x='work_year', y='salary_in_usd', template="plotly_dark")

    fig.update_layout(
        title='Evoluci칩n del Salario Medio',
        xaxis=dict(title='Paso del Tiempo'),
        yaxis=dict(title='Salario en USD')
    )
    st.plotly_chart(fig)
    st.markdown("""
    A partir de la gr치fica se puede reparar en que, a partir de 2021 hasta el a침o 2022, hay un crecimiento muy brusco del salario medio. Mientras que para la evoluci칩n de 2022 a 2023, el crecimiento deja de tener una pendiente tan pronunciada, lo cu치l puede indicar una estabilizaci칩n del crecimiento salarial.
    """)
with tab2:
    col1,col2 = st.columns(2)
    with col1:
        code=("""
        x_mean=data['work_year'].mean()
    y_mean=data['salary_in_usd'].mean()

    suma_prod_dif=0
    suma_cuad_dif=0

    for v1,v2 in zip(data['work_year'],data['salary_in_usd']):
        suma_prod_dif+=(v1-x_mean)*(v2-y_mean)
        suma_cuad_dif+=(v1-x_mean)**2

    b1=suma_prod_dif/suma_cuad_dif
    b0=y_mean-(x_mean*b1)
    y=b0+(b1*2024)

    print(f'Para 2024, se estima que el salario medio alcance {round(y,2)} d칩lares')

    pct_salary=((y*100)/data.loc[3,'salary_in_usd'])-100
    pct_salary2=((data.loc[2,'salary_in_usd']*100)/data.loc[3,'salary_in_usd'])-((data.loc[1,'salary_in_usd']*100)/data.loc[3,'salary_in_usd'])

    print(f'Esto supondr칤a un crecimiento del {round(pct_salary,2)}% frente al {round(pct_salary2,2)}% que hubo de 2021 a 2022.')
        """)
        st.code(code,language='python')

        x_mean=data['work_year'].mean()
        y_mean=data['salary_in_usd'].mean()

        suma_prod_dif=0
        suma_cuad_dif=0

        for v1,v2 in zip(data['work_year'],data['salary_in_usd']):
            suma_prod_dif+=(v1-x_mean)*(v2-y_mean)
            suma_cuad_dif+=(v1-x_mean)**2

        b1=suma_prod_dif/suma_cuad_dif
        b0=y_mean-(x_mean*b1)
        y=b0+(b1*2024)

        st.write(f'Para 2024, se estima que el salario medio alcance {round(y,2)} d칩lares')

        pct_salary=((y*100)/data.loc[3,'salary_in_usd'])-100
        pct_salary2=((data.loc[2,'salary_in_usd']*100)/data.loc[3,'salary_in_usd'])-((data.loc[1,'salary_in_usd']*100)/data.loc[3,'salary_in_usd'])

        st.write(f'Esto supondr칤a un crecimiento del {round(pct_salary,2)}% frente al {round(pct_salary2,2)}% que hubo de 2021 a 2022.')

    with col2:
        fig = go.Figure()
        valor = go.Indicator( mode = "number+delta", value = round(y,2), name = "Evoluci칩n Salario Medio",
                            delta = dict( reference = data.loc[3,'salary_in_usd'], increasing_color = "green", decreasing_color = "red" ))
        fig.add_trace(valor)
        fig.update_layout(
            width=400,
            height=300,
            template='plotly_dark'
        )
        st.plotly_chart(fig)
    
    st.markdown("""
    Si se contin칰a con la misma tendencia de crecimiento, para 2024, se estima que el salario medio alcance 169563.54 d칩lares. Esto supondr칤a un crecimiento de 2023 a 2024 del 13.77% frente al 26.34% que hubo de 2021 a 2022.
    """)

st.subheader('Proporci칩n de Trabajo Remoto con la Especialidad')
average_remote_ratio_per_job= df.groupby(['job_specialization'])['remote_ratio'].mean().reset_index()

fig = px.bar(average_remote_ratio_per_job,x='remote_ratio', y='job_specialization', template="plotly_dark", color='job_specialization',height=500,orientation='h')

fig.update_layout(
    title='Distribuci칩n del Empleo Remoto entre Especializaciones',
    xaxis=dict(title='Ratio Remoto'),
    yaxis=dict(title='T칤tulo del empleo')
)
st.plotly_chart(fig)
st.markdown("""
En la gr치fica se aprecia que, de media, todos aquellos trabajos relacionados con Business Intelligence tienen un ratio de trabajo remoto del 61% aproximadamente, seguido por aquellos trabajos agrupados en Artifical Intelligence. En las dem치s especialidades, al ser trabajos m치s dedicados al tratamiento de datos, donde puede existir el inter칠s de realizar los pertinentes an치lisis o simulaciones en el sitio de trabajo, ya sea por conveniencia o por temas legales, el ratio se ve disminuido, alcanzando en la especialidad Scientist el 42% aproximadamente.
""")

st.subheader('Usuarios con Trabajo Remoto')
remote_work_by_country=df[df['remote_ratio']>0].groupby('employee_residence')['remote_ratio'].value_counts()
remote_work_by_country_df=pd.DataFrame(remote_work_by_country).reset_index()
remote_work_by_country_df=remote_work_by_country_df.groupby('employee_residence')['count'].sum()
remote_work_count=pd.DataFrame(remote_work_by_country_df).reset_index()
fig = px.bar(remote_work_count.sort_values(by='count', ascending=False),
             x='employee_residence', y='count', template="plotly_dark", color='employee_residence')

fig.update_layout(
    title='Residencia del Usuario vs Trabajo Remoto',
    yaxis=dict(title='Usuarios con Trabajo Remoto'),
    xaxis=dict(title='T칤tulo del empleo')
)
st.plotly_chart(fig)
st.markdown("""
En esta gr치fica se est치 mostrando aquellos pa칤ses donde viven los usuarios que tienen una situaci칩n de trabajo h칤brido o teletrabajo. Se comprueba que en Estados Unidos es donde hay un mayor n칰mero de empleados con trabajo remoto en comparaci칩n con los dem치s.
""")

st.subheader('Evoluci칩n del Ratio Remoto con los A침os')

tab1,tab2=st.tabs(['Evoluci칩n', 'Predicci칩n'])
with tab1:
    data=df.groupby('work_year')['remote_ratio'].mean().reset_index()
    fig = px.line(data, x='work_year', y='remote_ratio', template="plotly_dark")

    fig.update_layout(
        title='Evoluci칩n del Trabajo Remoto',
        xaxis=dict(title='Paso del Tiempo'),
        yaxis=dict(title='Proporci칩n trabajo remoto')
    )
    st.plotly_chart(fig)
    st.markdown("""
En la gr치fica se observa una considerable ca칤da de la proporci칩n del trabajo remoto en comparaci칩n con el crecimiento observado en 2020, lo cual coincide con la terminaci칩n del encerramiento por la pandemia en 2021.
    """)
with tab2:
    col1,col2 = st.columns(2)
    with col1:
        code=("""
       x_mean=data['work_year'].mean()
y_mean=data['remote_ratio'].mean()

suma_prod_dif=0
suma_cuad_dif=0

for v1,v2 in zip(data['work_year'],data['remote_ratio']):
    suma_prod_dif+=(v1-x_mean)*(v2-y_mean)
    suma_cuad_dif+=(v1-x_mean)**2

b1=suma_prod_dif/suma_cuad_dif
b0=y_mean-(x_mean*b1)
y=b0+(b1*2024)

print(f'Para 2024, se estima que el ratio de trabajo remoto alcance {round(y,2)}%')

pct_remote=((y*100)/data.loc[3,'remote_ratio'])-100
pct_remote2=((data.loc[2,'remote_ratio']*100)/data.loc[3,'remote_ratio'])-((data.loc[1,'remote_ratio']*100)/data.loc[3,'remote_ratio'])

print(f'Esto supondr칤a un decrecimiento del {round(abs(pct_remote),2)}% frente al {round(abs(pct_remote2),2)}% que hubo de 2021 a 2022.')
        """)
        st.code(code,language='python')

        x_mean=data['work_year'].mean()
        y_mean=data['remote_ratio'].mean()

        suma_prod_dif=0
        suma_cuad_dif=0

        for v1,v2 in zip(data['work_year'],data['remote_ratio']):
            suma_prod_dif+=(v1-x_mean)*(v2-y_mean)
            suma_cuad_dif+=(v1-x_mean)**2

        b1=suma_prod_dif/suma_cuad_dif
        b0=y_mean-(x_mean*b1)
        y=b0+(b1*2024)

        st.write(f'Para 2024, se estima que el ratio de trabajo remoto alcance {round(y,2)}%')

        pct_remote=((y*100)/data.loc[3,'remote_ratio'])-100
        pct_remote2=((data.loc[2,'remote_ratio']*100)/data.loc[3,'remote_ratio'])-((data.loc[1,'remote_ratio']*100)/data.loc[3,'remote_ratio'])

        st.write(f'Esto supondr칤a un decrecimiento del {round(abs(pct_remote),2)}% frente al {round(abs(pct_remote2),2)}% que hubo de 2021 a 2022.')

    with col2:
        fig = go.Figure()
        valor = go.Indicator( mode = "number+delta", value = y, name = "Evoluci칩n Trabajo Remoto",
                            delta = dict( reference = data.loc[3,'remote_ratio'], increasing_color = "green", decreasing_color = "red" ))
        fig.add_trace(valor)
        fig.update_layout(
            width=400,
            height=300,
            template='plotly_dark'
        )
        st.plotly_chart(fig)
    
    st.markdown("""
Si se contin칰a con la misma tendencia, se estima que, para 2024, el ratio de trabajo remoto alcance el 29.2%. Esto supondr칤a un decrecimiento del 14.27% frente al decrecimiento del 39.01% que hubo de 2021 a 2022.
        """)

st.subheader('El Salario Medio en funci칩n de los Pa칤ses de los Usuarios')
avg_salary_by_country = df.groupby('employee_residence')['salary_in_usd'].mean().reset_index()

fig = px.bar(avg_salary_by_country.sort_values(by='salary_in_usd',ascending=False), x='employee_residence', 
             y='salary_in_usd',color='employee_residence', template="plotly_dark",
             title='Salarios medios en USD por pa칤s')
fig.update_layout(xaxis_title='Pa칤s', yaxis_title='Salario')
fig.update_xaxes(tickangle=90)
st.plotly_chart(fig)
st.markdown("""
En la gr치fica se puede ver que la media de salario m치s alta se corresponde con Israel con m치s de 400,000 USD, mientras que Estados Unidos se encontrar칤a situado en cuarto lugar, con una media de casi 153,000 USD, estando muy por encima de Espa침a, cuya media es de aproximadamente 61,000 USD.
""")

st.subheader('Distribuci칩n de Roles de Trabajo por Experiencia')
experience_job_ds = df.groupby(['experience_level', 'job_title']).size().reset_index(name='Counts')
fig = px.treemap(experience_job_ds, path=['experience_level', 'job_title'], values='Counts', title='츼rbol de Trabajo',template="plotly_dark")
st.plotly_chart(fig)
st.markdown("""
Se puede apreciar que un mayor n칰mero de roles caen dentro de la experiencia SE (senior), la cu치l tendr치 una mayor responsabilidad y permitir치 diferentes especializaciones con mayor flexibilidad, debido a los conocimientos adquiridos. Por otro lado, la experiencia EX (experto) tiene un menor n칰mero de roles agrupados, ya que ser치n empleos centrados en la organizaci칩n, la supervisaci칩n y la gerencia, lo cu치l hace que se generen menos puestos y que los mismos sean muy espec칤ficos.
""")

st.subheader('Salario Medio en funci칩n del Tipo de Contrato')
avg_salary_by_employment = df.groupby(['employment_type'])['salary_in_usd'].mean().reset_index()

fig = px.bar(avg_salary_by_employment.sort_values('salary_in_usd', ascending=False),
                    x='employment_type', y='salary_in_usd', color='employment_type', template="plotly_dark")
fig.update_layout(
    title="Salario Medio en funci칩n del Tipo de Contrato",
    scene=dict(
        xaxis=dict(title="Tipo de Contrato"),
        yaxis=dict(title="Salario Medio en USD")
    )
)
st.plotly_chart(fig)
st.markdown("""
En la gr치fica se observa que en el tipo de contrato FT (a tiempo completo) es donde se alcanza un salario medio mayor, de m치s de 138,000 USD, lo cu치l indica que para ciertos pa칤ses y ciertos puestos de trabajo, las empresas retribuyen mucho mejor a sus empleados que a las empresas externas que contratan para realizar las tareas. Por otro lado, el salario medio m치s bajo es para el tipo de contrato PT (media jornada) que no alcanza los 40,000 USD anuales. As칤, se puede decir que las empresas favorecen mucho m치s a los empleados capaces de comprometerse con ellas con salarios mucho m치s altos.
""")

st.subheader('Top 10 Empleos en Data')
top10_empleos =pd.DataFrame(df['job_title'].value_counts()[:10])

fig = px.bar(top10_empleos.reset_index(), x='count', y='job_title', template="plotly_dark", color='job_title')

fig.update_layout(
    title='Top 10 Empleos en Data',
    yaxis=dict(title='T칤tulo del empleo'),
    xaxis=dict(title='Cantidad de empleados')
)
st.plotly_chart(fig)
st.markdown("""
Los tres empleos m치s comunes entre los usuarios son Data Engineer, Data Scientist y Data Analyst, los dem치s al ser m치s espec칤ficos dentro de cada rama, son m치s inusuales y por tanto, menos usuarios trabajan en ellos.
""")

st.subheader('Top 10 empleos m치s cotizados')
top10_cotizados = df.groupby('job_title')['salary_in_usd'].mean().reset_index()
top10_cotizados = top10_cotizados.sort_values(by='salary_in_usd', ascending=False).head(10)

fig = px.bar(top10_cotizados, x='salary_in_usd', y='job_title', template="plotly_dark", color='job_title')

fig.update_layout(
    title='Top 10 empleos m치s cotizados',
    xaxis=dict(title='Salario medio (USD)'),
    yaxis=dict(title='T칤tulo del empleo')
)
st.plotly_chart(fig)
st.markdown("""
Dentro de los diez empleos con mejor cotizaci칩n, Data Science Tech Lead se sit칰a el primero, un salario medio anual de m치s de 375,000 USD. En el 칰ltimo puesto se encontrar칤a Applied Scientist, con un salario medio anual de m치s de 190,000 USD. Si se compara esta gr치fica con la anterior, el top 10 de empleos en el sector de Data, se puede comprobar que los empleos aqu칤 mostrados son m치s especializados, lo cu치l puede indicar una mayor necesidad por falta de demanda, que se traducir칤a en sueldos m치s elevados.
""")

st.subheader('Top 10 empleos remotos')
top10_remotos = df.groupby('job_title')['remote_ratio'].mean().reset_index()

fig = px.pie(top10_remotos[:10].sort_values(by='remote_ratio', ascending=False),
             names='job_title',values='remote_ratio',color='job_title',template='plotly_dark')

fig.update_layout(
    title='Top 10 empleos remotos')
st.plotly_chart(fig)
st.markdown("""
En la gr치fica se comprueba que aquellos empleos con un ratio remoto medio de entre el 70% y el 90% son Applied Data Scientist, Applied Machine Learning Scientist and AI Scientist. En los dem치s, el ratio remoto medio disminuye considerablemente, indicando que son trabajos donde al menos se necesita una modalidad h칤brida para ser realizados eficientemente.
""")

st.subheader('Correlaciones entre Variables')
le = LabelEncoder()
df['experience_level'] = le.fit_transform(df['experience_level'])
df['employment_type'] = le.fit_transform(df['employment_type'])
df['employee_residence'] = le.fit_transform(df['employee_residence'])
df['company_location'] = le.fit_transform(df['company_location'])
df['company_size'] = le.fit_transform(df['company_size'])
df['job_specialization'] = le.fit_transform(df['job_specialization'])

df_corr=df.corr('pearson',numeric_only=True)

fig = go.Figure(data=go.Heatmap(z=df_corr.values, x=df_corr.columns, y=df_corr.columns))
fig.update_layout(
    width=800,
    height=800,
    title='Mapa de calor',
    template='plotly_dark'
)
st.plotly_chart(fig)
st.markdown("""
Tras observar la gr치fica de correlaciones, se observan diferentes correlaciones positivas no significativas. La primera se observa entre la experiencia y el salario en d칩lares. Esta falta de significatividad se puede deber a diferentes puestos de empleo que fueron identificados como valores at칤picos, que mostraban salarios muy altos dependiendo del pa칤s o la demanda, lo cu치l hace que la correlaci칩n entre el empleado y el salario disminuya, si para experiencias similares hay diferencias salariales muy dispares. Finalmente, las dos siguientes son entre el salario, la residencia del empleado y la localizaci칩n de la empresa. La localizaci칩n de la empresa coincide en su mayor칤a con la localizaci칩n del empleado, por lo que ambas parecen tener la misma correlaci칩n con el salario. Esto quiere indicar que la localizaci칩n o residencia tienen un gran impacto en el salario que cobre el empleado, no obstante, la correlaci칩n entre las variables puede verse en gran medida detrimentada devido a los elevados sueldos de ciertos empleos, que no encaja con el salario que se percibe en los dem치s pa칤ses.

Para el resto de variables, no se observa ninguna correlaci칩n, lo cual puede indicar que no exista una relaci칩n lineal entre ellas o que se necesitan m치s datos para establecer una relaci칩n m치s concreta.
""")    


image1 = Image.open('img/dslg.png')
st.sidebar.image(image1)